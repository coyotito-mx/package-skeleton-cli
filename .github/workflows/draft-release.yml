name: Release Drafter

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  draft-release:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Create Draft Release
        id: draft_release
        uses: release-drafter/release-drafter@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          disable-autolabeler: true

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          tools: composer

      - name: Get Composer Cache Directory
        id: composer-cache-dir
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          path: ${{ steps.composer-cache-dir.outputs.dir }}

      - name: Install Dependencies
        shell: bash
        run: |
          composer install \
            --no-dev \
            --no-progress \
            --no-interaction \
            --optimize-autoloader

      - name: Build CLI
        shell: bash
        run: |
          php skeleton app:build \
            --no-interaction \
            --build-version="v${{ steps.draft_release.outputs.resolved_version }}" skeleton

      - name: Save Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: skeleton
          path: builds/skeleton
          retention-days: 1

      - name: Archive CLI
        shell: bash
        run: |
          # Change Directory
          cd builds

          if command -v zip >/dev/null 2>&1; then
            echo "zip is installed"
          else
            echo "zip is not installed, installing..."

            sudo apt-get update
            sudo apt-get install -y zip
          fi

          # Create Archives
          zip skeleton.zip skeleton
          tar -czf skeleton.tar.gz skeleton

          # Remove Unnecessary Files
          rm -f phpacker.json

      - name: Upload Release Assets
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ steps.draft_release.outputs.upload_url }}
          asset_path: builds/*

    outputs:
      upload_url: ${{ steps.draft_release.outputs.upload_url }}
      composer-directory: ${{ steps.composer-cache-dir.outputs.dir }}

  build:
    strategy:
      matrix:
        platform: [ 'mac', 'linux' ]

    needs: draft-release
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          tools: composer

      - name: Install PHPacker
        shell: bash
        run: |
          composer global require \
            --no-progress \
            --no-interaction \
            --optimize-autoloader \
            phpacker/phpacker

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: skeleton
          path: ./builds

      - name: Rename CLI
        shell: bash
        run: |
          mv ./builds/skeleton ./builds/skeleton.phar

      - name: Cache PHP Binaries
        id: cache-php-binaries
        uses: actions/cache@v4
        with:
          path: ~/.phpacker/binaries
          key: php-binaries

      - name: Build Binaries
        shell: bash
        run: phpacker build ${{ matrix.platform }} --src=./builds/skeleton.phar

      - name: Remove unnecessary Files
        shell: bash
        run: |
          # Change Directory
          cd builds

          # Remove unnecessary files
          rm -f phpacker.json skeleton.phar

      - name: Archive Artifacts
        shell: bash
        run: |
          # Change directory
          cd builds

          # Move files to root of builds directory
          find build -type f -exec mv {} . \;

          # Remove now empty build directory
          rm -rf build

          # Create zip and tar.gz archives from everything in builds directory
          find . \
            -type f -not -name '*.*' \
            -exec zip -j "$(basename {})".zip {} \; \
            -exec tar -czf "$(basename {})".tar.gz {} \;

      - name: Upload Release Assets
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ needs.draft-release.outputs.upload_url }}
          asset_path: builds/*
