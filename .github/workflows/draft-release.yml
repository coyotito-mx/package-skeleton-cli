name: Release Drafter

on:
  pull_request:
    branches: [main]
    types: [closed]

permissions:
  contents: read

jobs:
  draft-release:
    if: ${{ github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Create Draft Release
        id: draft_release
        uses: release-drafter/release-drafter@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commitish: ${{ github.ref }}
          disable-autolabeler: true

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          tools: composer

      - name: Get Composer Cache Directory
        id: composer-cache-dir
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          path: ${{ steps.composer-cache-dir.outputs.dir }}

      - name: Install Dependencies
        shell: bash
        run: |
          composer install --no-dev --no-progress --no-interaction --optimize-autoloader &&
          composer global require --no-progress --no-interaction phpacker/phpacker

      - name: Build CLI
        shell: bash
        run: |
          php skeleton app:build skeleton.phar \
            --no-interaction \
            --build-version="v${{ steps.draft_release.outputs.resolved_version }}"

      - name: Cache PHP Binaries
        id: cache-php-binaries
        uses: actions/cache@v4
        with:
          path: ~/.phpacker/binaries
          key: php-binaries

      - name: Build Binaries
        shell: bash
        run: |
          # Build macOS binary
          phpacker build

          # Move binary to builds root folder and rename it
          mv builds/mac/mac-arm builds/skeleton-mac

          # Remove directory
          rm -rf builds/mac

      - name: Archive CLI
        shell: bash
        run: |
          if command -v zip >/dev/null 2>&1; then
            echo "zip is installed"
          else
            echo "zip is not installed, installing..."

            sudo apt-get update
            sudo apt-get install -y zip
          fi

          # Rename Phar binary
          mv skeleton.phar skeleton

          # Create zip and tar.gz archives from everything in builds directory
          find . \
            -type f -not -name '*.*' \
            -exec zip -j "$(basename {})".zip {} \; \
            -exec tar -czf "$(basename {})".tar.gz {} \;
        working-directory: builds

      - name: Upload Release Assets
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ steps.draft_release.outputs.upload_url }}
          asset_path: builds/*
